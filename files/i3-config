{% if model == "virtualbox" %}
# alt
set $mod Mod1
{% else %}
# windows key
set $mod Mod4
{% endif %}

# startup commands
exec_always --no-startup-id "killall picom; picom -b --config ~/.config/picom/picom.conf"
exec_always --no-startup-id nm-applet
exec_always --no-startup-id "ps -eaf | grep flameshot | grep -v grep || flameshot"
exec_always --no-startup-id "ps -eaf | grep udiskie | grep -v grep || udiskie"
exec_always --no-startup-id blueman-applet
exec_always --no-startup-id ~/.config/polybar/launch.sh
exec_always --no-startup-id setbg
exec_always --no-startup-id setxkbmap -option compose:rctrl

# display brightness
bindsym XF86MonBrightnessDown exec light -U 5
bindsym XF86MonBrightnessUp exec light -A 5

# volume
bindsym XF86AudioRaiseVolume exec --no-startup-id volume up
bindsym XF86AudioLowerVolume exec --no-startup-id volume down
bindsym XF86AudioMute exec --no-startup-id volume mute

# media controller
bindsym XF86AudioNext exec --no-startup-id playerctl -p playerctld next
bindsym XF86AudioPrev exec --no-startup-id playerctl -p playerctld previous
bindsym XF86AudioPlay exec --no-startup-id playerctl -p playerctld play-pause

# notifications
bindsym $mod+Shift+m exec dunstctl close-all
bindsym $mod+n exec dunstctl history-pop
bindsym $mod+Shift+i exec dunstctl context

# launcher
bindsym $mod+d exec rofi -show drun
bindsym $mod+Shift+d exec rofi -show window
bindsym $mod+c exec rofi -show calc -no-show-match -no-sort
bindsym $mod+e exec rofi -show emoji

# programs
bindsym $mod+Return exec alacritty
bindsym $mod+Print exec flameshot gui

# general
bindsym $mod+q kill
bindsym $mod+f fullscreen toggle
bindsym $mod+x floating toggle
bindsym $mod+a focus mode_toggle
bindsym $mod+m move workspace to output right
bindsym $mod+Shift+s sticky toggle

floating_modifier $mod

{% for (direction, vim) in [("up", "k"), ("down", "j"), ("left", "h"), ("right", "l")] %}
bindsym $mod+{{ vim }} focus {{ direction }}
bindsym $mod+{{ direction|capitalize }} focus {{ direction }}
bindsym $mod+Shift+{{ vim }} move {{ direction }}
bindsym $mod+Shift+{{ direction|capitalize }} move {{ direction }}
{% endfor %}

{% for i in range(1, 11) %}
bindsym $mod+{{ i % 10 }} workspace number {{ i }}
bindsym $mod+Shift+{{ i % 10 }} move container to workspace number {{ i }}
{% endfor %}

mode resize {
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt
  bindsym Up resize shrink height 10 px or 10 ppt
  bindsym Down resize grow height 10 px or 10 ppt

  bindsym Escape mode default
  bindsym Return mode default
}
bindsym $mod+r mode resize

set $system "Reload i3 (c)onfig, (e)xit i3, (s)leep, (h)ibernate, (r)eboot, (S)hutdown"
mode $system {
  bindsym c restart; mode default
  bindsym e exit; mode default
  bindsym s exec --no-startup-id "systemctl suspend"; mode default
  bindsym h exec --no-startup-id "systemctl hibernate"; mode default
  bindsym r exec systemctl reboot; mode default
  bindsym Shift+s exec systemctl poweroff; mode default

  bindsym Escape mode default
  bindsym Return mode default
}
bindsym $mod+Escape mode $system

# disable titles for i3-gaps to work properly
for_window [class=".*"] border pixel 0

font pango: {{ theme_font }} 11
gaps inner {{ window_gap // 2 }}
gaps outer {{ screen_gap // 2 }}
# Note: dividing by 2 here because height in polybar is doubled relative to i3
gaps {{ 'top' if bar_position_top else 'bottom' }} {{ (bar_height + window_gap + screen_gap) // 2 }}

{% include theme_dir + "i3" %}

# File management

:e              reload file
:q              quit
:q!             quit without saving changes
:w              write file
<space>w        quick save
:w {file}       write new file
:x              write file and exit

# Movement

    k
  h   l         basic motion
    j

H               move to the start of the line
L               move to the end of the line
w               next start of word
W               next start of whitespace-delimited word
e               next end of word
E               next end of whitespace-delimited word
b               previous start of word
B               previous start of whitespace-delimited word
0               start of line
$               end of line
gg              go to first line in file
G               go to end of file
gk              move down one displayed line
gj              move up one displayed line

# Insertion
#   To exit from insert mode use Esc or Ctrl-C
#   Enter insertion mode and:

a               append after the cursor
A               append at the end of the line
i               insert before the cursor
I               insert at the beginning of the line
o               create a new line under the cursor
O               create a new line above the cursor
R               enter insert mode but replace instead of inserting chars
:r {file}       insert from file

# multi selection

ctrl-n         select other instances of the current word
ctrl-up/down   create cursors verically
shift-<arrow>  select one character at a time
n/N            go to the next/previous occurance
[              select the previous cursor
]              select the next cursor
q              skip current cursor and get next
Q              remove current cursor
i/a/I/A        start insert mode for all cursors

# Editing

u               undo
ctrl-r          redo
yy              yank (copy) a line
y{motion}       yank text that {motion} moves over
p               paste after cursor
P               paste before cursor
<Del> or x      delete a character
dd              delete a line
d{motion}       delete text that {motion} moves over

# Search and replace with the `:substitute` (aka `:s`) command

:s/foo/bar/    replace the first match of 'foo' with 'bar' on the current line only
:s/foo/bar/g   replace all matches (`g` flag) of 'foo' with 'bar' on the current line only
:%s/foo/bar/g  replace all matches of 'foo' with 'bar' in the entire file (`:%s`)
:%s/foo/bar/gc ask to manually confirm (`c` flag) each replacement 

# Preceding a motion or edition with a number repeats it 'n' times
# Examples:
50k         moves 50 lines up
2dw         deletes 2 words
5yy         copies 5 lines
42G         go to line 42

# Windows
<left arrow>     - change to previous buffer
<right arrow>    - change to next buffer
:e filename      - edit another file
:split filename  - split window and load another file
ctrl-w up arrow  - move cursor up a window
ctrl-w ctrl-w    - move cursor to another window (cycle)
ctrl-w o         - keep only this window open
10 ctrl-w+       - increase window size by 10 lines
:vsplit file     - vertical split
:sview file      - same as split, but readonly
:hide            - close current window
:only            - keep only this window open

# clipboard
<space>y    yank to system clipboard
<space>p    paste from system clipboard
<space>P    paste from system clipboard (before cursor)

# fzf

<space>f   fzf for a file
<space>b   fzf for a buffer
<space>k   fzf for any text

# search

/<text><enter>  begin a search
?<text><enter>  being a backwards search
n               repeat the previous search
N               repeat the previous search backwards
*               search for the current word
#               search backwards for the current word

# Git
<space>gs   open git fugitive (status)
<space>gd   run :Gdiff
<space>gp   run :Git push

# IDE
[g        go to previous diagnostic
]g        go to next diagnostic
gd        go to definition
gy        go to type definition
gi        go to implementation
gr        find references
K         show documentation preview
<space>i  implement methods for trait (e.g. Rust)
<space>a  perform a COC action (opens selection menu)
<space>r  rename a symbol

# (as a motion--visual mode or c<motion>, d<motion>, etc)
af  function definition
ac  class definition

# misc
<space>s Show stats of the current buffer
